<h1><%-title%></h1>
<div class="row mb-2">
    <form class="col-8 col-md-4" name="frm">
        <div class="input-group">
            <input name="query" class="form-control" placeholder="검색어" value="서울 KFC">
            <button class="btn btn-info">검색</button>
        </div>
    </form>
</div>
<div id="div_local"></div>
<div class="text-center my-3">
    <button class="btn btn-war" id="prev">이전</button>
    <span class="mx-3" id="page">1</span>
    <button class="btn btn-info" id="next">다음</button>
</div>

<!-- 지도를 출력할 영역 -->
<div id="map"></div>

<script id="temp_local" type="X-handlebars-template">
    <table class="table table-striped table-hover">
        <tr>
            <td>장소명</td><td>전화</td><td>주소</td><td>위치</td>
        </tr>
        {{#each documents}}
            <tr>
                <td>{{place_name}}</td>
                <td>{{phone}}</td>
                <td>{{address_name}}</td>
                <td><button x={{x}} y={{y}} address="{{address_name}}" class="btn btn-info btn-sm location">위치</button></td>
            </tr>
        {{/each}}
    </table>
</script>

<script>
    let query=$(frm.query).val();
    let page=1;
    getData();

    //위치 버튼을 클릭한 경우
    $("#div_local").on("click", ".location", function(){
         
        const x = $(this).attr("x");
        const y = $(this).attr("y");
        const address = $(this).attr("address");
        // alert(x + " : " + y);
        var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
        var options = { //지도를 생성할 때 필요한 기본 옵션
	        center: new kakao.maps.LatLng(y, x), //지도의 중심좌표.
	        level: 3 //지도의 레벨(확대, 축소 정도)
        };

        var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴

        var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
        mapOption = { 
        center: new kakao.maps.LatLng(y, x), // 지도의 중심좌표
        level: 3 // 지도의 확대 레벨
        };

        var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

        // 마커가 표시될 위치입니다 
        var markerPosition  = new kakao.maps.LatLng(y, x); 

        // 마커를 생성합니다
        var marker = new kakao.maps.Marker({
            position: markerPosition
        });

        // 마커가 지도 위에 표시되도록 설정합니다
        marker.setMap(map);

        // 아래 코드는 지도 위의 마커를 제거하는 코드입니다
        // marker.setMap(null);

        var iwContent = '<div style="padding:5px;">' + address + '</div>',
            iwPosition = new kakao.maps.LatLng(y, x); //인포윈도우 표시 위치입니다

        // 인포윈도우를 생성합니다
        var infowindow = new kakao.maps.InfoWindow({
            position : iwPosition, 
            content : iwContent 
        });
        
        kakao.maps.event.addListener(marker, "mouseover", function(){
            infowindow.open(map, marker);
        });

        kakao.maps.event.addListener(marker, "mouseout", function(){
            infowindow.close(map, marker);
        });
    });



    $(frm).on("submit", function(event) {
        event.preventDefault();
        query=$(frm.query).val();
        if(query==""){
            alert("검색어를 입력하세요!");
        }
        else {
            page=1;
            getData();
        }
    });

    //이미지를 클릭한 경우
    $("#div_book").on("click", "img", function() {
        const id = $(this).attr("id");
        $("#modal" + id).modal("show");
    });

    //다음 버튼을 클릭한 경우
    $("#next").on("click", function() {
        page++;
        getData();
    });

    //이전 버튼을 클릭한 경우
    $("#prev").on("click", function() {
        page--;
        getData();
    });
    
    function getData() { //데이터 불러오기
        $.ajax({
           type : "get",
           url : "https://dapi.kakao.com/v2/local/search/keyword.json",
           dataType : "json",
           data : {query : query, size : 5, page : page},
           headers : {"Authorization" : "KakaoAK 9a5fa7c035339e405f49a5347ceb488f"}, //headers : 인증키
           success : function(data) {
                console.log(data);
                //alert("성공!");
                const temp = Handlebars.compile($("#temp_local").html());
                $("#div_local").html(temp(data));

                const last = Math.ceil(data.meta.pageable_count/5);
                $("#page").html(`<b>${page} / ${last}</b>`);
                if(page==1) {
                    $("#prev").attr("disabled", true); //속성 변화 : attr, disabled : 불가능
                }
                else {
                    $("#prev").attr("disabled", false);
                }

                if(data.meta.is_end) { //마지막 페이지면 넥스트 페이지가 눌리면 안돼
                    $("#next").attr("disabled", true);
                }
                else{
                    $("#next").attr("disabled", false);
                }
            
           } 
        });
    }
</script>